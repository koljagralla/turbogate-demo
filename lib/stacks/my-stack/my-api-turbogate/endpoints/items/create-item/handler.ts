// Generated by turbogate (v2.0.2)
// BEFORE EDITING: Please read turbogate docs and the following caveats.
// Purpose of thise file:           The entrypoint for this endpoints lambda handler. Performs parsing and validation and injects the results into the main function.
// Expected signature:              export const handler = async (rawRequest: RawRequest): Promise<APIGatewayProxyResult>
// Can be edited?                   File could technically be edited, as long as the export signature remains. However, editing this file is not intended usage.
// Can be permanently deleted?      No, CDK synth will fail because this file is dynamically loaded.
// Will be recreated?               Yes, if you delete this file and run `turbogate build` it will be recreated.
import {
  handleFauxExtendZodWithOpenApi,
  parseAuthorizerContext,
  parseEnvironment,
  parseRequest,
  parseResponse,
  RawRequest,
} from 'turbogate';
import { APIGatewayProxyResult, Context } from 'aws-lambda';
import { z } from 'zod';
import { zAuthorizerContext } from './authorizer';
import { zEnvironment } from './environment';
import { main } from './main';
import { Request, zRequest } from './request';

export const handler = async (rawRequest: RawRequest, context: Context): Promise<APIGatewayProxyResult> => {
  handleFauxExtendZodWithOpenApi; // This need to be in the code so the fauxExtendZodWithOpenApi is not tree shaken.

  const environment = parseEnvironment(zEnvironment);
  const authorizerContext = parseAuthorizerContext(zAuthorizerContext, rawRequest);

  let request: Request;
  try {
    request = parseRequest(zRequest, rawRequest);
  } catch (e: any) {
    if (e instanceof z.ZodError) {
      return parseResponse({
        statusCode: 400,
        body: e.issues,
      });
    }
    throw e;
  }

  return main(environment, request, authorizerContext, context).then(parseResponse);
};
